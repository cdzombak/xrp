FROM ghcr.io/cdzombak/xrp/builder:latest AS builder

ARG XRP_VERSION=latest
WORKDIR /workspace

# Copy plugin source
COPY . .

# Generate go.mod with XRP's exact dependency versions if available
RUN if [ -f /xrp-go.mod ]; then \
        echo "Using XRP dependency versions from /xrp-go.mod"; \
        # Extract Go version from XRP's go.mod
        GO_VERSION=$(grep '^go ' /xrp-go.mod | cut -d' ' -f2 || echo "1.21"); \
        PLUGIN_NAME=$(basename $(pwd)); \
        # Create new go.mod with exact versions
        cat > go.mod << EOF; \
module ${PLUGIN_NAME}

go ${GO_VERSION}

require (
EOF; \
        # Add XRP plugin interface dependency
        echo "    github.com/cdzombak/xrp v0.0.0" >> go.mod; \
        # Extract and add other dependencies from XRP's go.mod
        grep -E '^[[:space:]]*github\.com/beevik/etree|^[[:space:]]*golang\.org/x/net' /xrp-go.mod | sed 's/^[[:space:]]*/    /' >> go.mod || true; \
        echo ")" >> go.mod; \
        echo "" >> go.mod; \
        echo "replace github.com/cdzombak/xrp => /xrp-source" >> go.mod; \
        echo "Generated go.mod:"; \
        cat go.mod; \
    else \
        echo "Warning: No XRP dependency information available, using plugin's go.mod"; \
    fi

# Initialize module and download dependencies
RUN go mod tidy

# Build the plugin
RUN CGO_ENABLED=1 go build -buildmode=plugin -o plugin.so .

# Output stage - copy built plugin
FROM scratch AS output
COPY --from=builder /workspace/plugin.so /plugin.so