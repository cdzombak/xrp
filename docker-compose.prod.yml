# Production Docker Compose for XRP
# This file provides a production-ready setup for XRP with Redis caching
# 
# Usage:
#   1. Copy this file to your server as docker-compose.yml  
#   2. Customize environment variables and volumes as needed
#   3. Place your config.json in ./config/
#   4. Place your plugins in ./plugins/
#   5. Run: docker compose up -d
#
# Important: Update the XRP image tag to match your desired version

services:
  # Redis cache - persistent data with authentication
  redis:
    image: redis:7-alpine
    container_name: xrp-redis
    restart: unless-stopped
    networks:
      - xrp-internal
    command: >
      redis-server 
      --appendonly yes 
      --appendfsync everysec
      --maxmemory 256mb
      --maxmemory-policy allkeys-lru
    volumes:
      - redis-data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s
    # Uncomment for external Redis access (not recommended for production)
    # ports:
    #   - "127.0.0.1:6379:6379"

  # XRP reverse proxy
  xrp:
    image: ghcr.io/cdzombak/xrp:latest  # Update to specific version tag
    container_name: xrp-proxy
    restart: unless-stopped
    ports:
      - "80:8080"   # HTTP traffic
      # - "443:8080"  # Uncomment for HTTPS (configure TLS termination)
    networks:
      - xrp-internal
    depends_on:
      redis:
        condition: service_healthy
    environment:
      # Logging configuration
      - LOG_LEVEL=info
      
      # Performance tuning
      - GOMAXPROCS=0  # Use all available CPUs
      - GOGC=100      # Default garbage collection target
      
      # Security headers (optional)
      - SECURITY_HEADERS=true
    volumes:
      # Configuration file - REQUIRED
      - ./config/config.json:/app/config.json:ro
      
      # Plugins directory - mount your .so plugin files here
      - ./plugins:/app/plugins:ro
      
      # Optional: TLS certificates (if handling HTTPS)
      # - ./certs:/app/certs:ro
      
      # Optional: Custom static content
      # - ./static:/app/static:ro
    command: ["/usr/local/bin/xrp", "-config", "/app/config.json"]
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    # Resource limits (adjust based on your needs)
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: '1.0'
        reservations:
          memory: 256M
          cpus: '0.5'

networks:
  xrp-internal:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 172.20.0.0/16

volumes:
  redis-data:
    driver: local

# Example directory structure:
#
# /opt/xrp/
# ├── docker-compose.yml          # This file  
# ├── config/
# │   └── config.json             # XRP configuration
# ├── plugins/
# │   ├── html_modifier.so        # Your plugins
# │   └── xml_processor.so
# └── certs/                      # Optional TLS certificates
#     ├── server.crt
#     └── server.key
#
# Example config/config.json:
# {
#   "backend_url": "https://api.example.com",
#   "redis": {
#     "addr": "redis:6379",
#     "password": "",
#     "db": 0
#   },
#   "mime_types": [
#     {
#       "mime_type": "text/html",
#       "plugins": [
#         {
#           "path": "/app/plugins/html_modifier.so",
#           "name": "HTMLModifierPlugin"
#         }
#       ]
#     }
#   ],
#   "cookie_denylist": ["session", "auth"],
#   "request_timeout": 30,
#   "max_response_size_mb": 10
# }