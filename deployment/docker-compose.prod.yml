# Production Docker Compose for XRP
# This file provides a production-ready setup for XRP with Redis caching
# 
# Usage:
#   1. Copy this file to your server as docker-compose.yml  
#   2. Customize environment variables and volumes as needed
#   3. Place your config.json in ./config/
#   4. Place your plugins in ./plugins/
#   5. Run: docker compose up -d
#
# Important: Update the XRP image tag to match your desired version

services:
  redis:
    image: redis:7-alpine
    restart: unless-stopped
    networks:
      - app-internal
    volumes:
      - redis-data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s

  xrp:
    image: ghcr.io/cdzombak/xrp:1.0.0
    restart: unless-stopped
    ports:
      - "80:8080" # HTTP traffic
    networks:
      - app-internal
    depends_on:
      redis:
        condition: service_healthy
    volumes:
      # Configuration file - REQUIRED
      - ./config/config.json:/app/config.json:ro
      # Plugins directory - mount your .so plugin files here
      - ./plugins:/app/plugins:ro
    command: ["/usr/local/bin/xrp", "-config", "/app/config.json"]
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

networks:
  app-internal:
    driver: bridge

volumes:
  redis-data:
    driver: local

# Example directory structure:
#
# /opt/xrp/
# ├── docker-compose.yml          # This file  
# ├── config/
# │   └── config.json             # XRP configuration (see config.example.json)
# ├── plugins/
# │   ├── html_modifier.so        # Your plugins
# │   └── xml_processor.so
# └── certs/                      # Optional TLS certificates
#     ├── server.crt
#     └── server.key
#
# See config.example.json for a sample configuration file.
